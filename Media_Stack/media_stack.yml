---
services:
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    user: uid:gid
    network_mode: 'host'
    volumes:
      - /docker/Jellyfin:/config
      - jellyfin_cache:/cache
      - cifs_media_manager_mount:/mnt/media
    devices:
      - "/dev/dri:/dev/dri"
    restart: unless-stopped
    extra_hosts:
      - 'host.docker.internal:host-gateway'
  #===  Arr Stack  ===#
  # Subtitle Manager
  bazarr:
    image: ghcr.io/hotio/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ="${TIMEZONE:-Etc/UTC}"
      - WEBUI_PORTS=6767/tcp,6767/udp
    volumes:
      - /docker/Bazarr:/config
      - cifs_media_manager_mount:/media
    ports:
      - 6767:6767
    networks:
      - default
    restart: unless-stopped
  bazarr-anime:
    image: ghcr.io/hotio/bazarr:latest
    container_name: bazarr-anime
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ="${TIMEZONE:-Etc/UTC}"
      - WEBUI_PORTS=6768/tcp,6768/udp
    volumes:
      - /docker/Bazarr-Anime:/config
      - cifs_media_manager_mount:/mnt/media
    ports:
      - 6768:6767
    networks:
      - default
    restart: unless-stopped
  # Media Indexer
  prowlarr:
    image: ghcr.io/hotio/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ="${TIMEZONE:-Etc/UTC}"
    volumes:
      - /docker/Prowlarr:/config
    ports:
      - 9696:9696
    networks:
      - default
    restart: unless-stopped
  # Movie Manager for Anime Movies
  radarr-anime:
    image: ghcr.io/hotio/radarr:latest
    container_name: radarr-anime
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ="${TIMEZONE:-Etc/UTC}"
    volumes:
      - /docker/Radarr-Anime:/config
      - cifs_media_manager_mount:/mnt/media
    ports:
      - 7878:7878
    networks:
      - default
    restart: unless-stopped
  # Movie Manager for Non-Anime Movies
  radarr-movies:
    image: ghcr.io/hotio/radarr:latest
    container_name: radarr-movies
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ="${TIMEZONE:-Etc/UTC}"
    volumes:
      - /docker/Radarr-Movies:/config
      - cifs_media_manager_mount:/mnt/media
    ports:
      - 7879:7878
    networks:
      - default
    restart: unless-stopped
  # Show Manager for Anime
  sonarr-anime:
    image: ghcr.io/hotio/sonarr:latest
    container_name: sonarr-anime
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ="${TIMEZONE:-Etc/UTC}"
    volumes:
      - /docker/Sonarr-Anime:/config
      - cifs_media_manager_mount:/mnt/media
    ports:
      - 8989:8989
    networks:
      - default
    restart: unless-stopped
  # Show Manager for TV Shows
  sonarr-shows:
    image: ghcr.io/hotio/sonarr:latest
    container_name: sonarr-shows
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ="${TIMEZONE:-Etc/UTC}"
    volumes:
      - /docker/Sonarr-Shows:/config
      - cifs_media_manager_mount:/mnt/media
    ports:
      - 8990:8989
    networks:
      - default
    restart: unless-stopped
  # NSFW Manager
  whisparr:
    image: ghcr.io/hotio/whisparr:latest
    container_name: whisparr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ="${TIMEZONE:-Etc/UTC}"
    volumes:
      - /docker/Whisparr:/config
      - cifs_media_manager_mount:/mnt/media
    ports:
      - 6969:6969
    networks:
      - default
    restart: unless-stopped
  #===  Supporting Programs Stack  ===#
  # Proxy Servers
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ="${TIMEZONE:-Etc/UTC}"
    ports:
      - 8191:8191
    networks:
      - default
    restart: unless-stopped 
  # Torrenting Client
  qbittorrent:
    image: ghcr.io/hotio/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ="${TIMEZONE:-Etc/UTC}"
    volumes:
      - /docker/qBittorrent:/config
      - cifs_media_manager_mount:/mnt/media
    ports:
      - 8080:8080

networks:
  default:

volumes:
  jellyfin_cache:

  cifs_media_manager_mount:
    driver: local
    driver_opts:
      type: cifs
      device: //${CIFS_REMOTE_IP}/Media_Managment
      o: "username=${CIFS_USERNAME},password=${CIFS_PASSWORD},uid=1000,gid=1000"
